class Solution {
public:
    int coin(vector<int>&coins, int amount ,int ind, vector<vector<int>> &dp ){
    
        if( amount == 0 ) return 0;
        
        if(ind == 0){            
            if(amount % coins[0] == 0 ) return amount/coins[0];
            else return 1e9;
        }  
        
        if(dp[ind][amount] != -1) return dp[ind][amount];
        
        int pick = 1e9;
        if( amount >= coins[ind]){
           pick = 1+coin(coins,amount-coins[ind],ind,dp);
        } 
        int notpick = 0+coin(coins,amount,ind-1,dp);        
        
        return dp[ind][amount] = min({pick,notpick});
    }
    int coinChange(vector<int>& coins, int amount) {
        int ind = coins.size();
        vector<vector<int>> dp (ind+1,vector<int>(amount+1,-1));
        int ans = coin(coins,amount,ind-1,dp);      
        
         if(ans >= 1e9) return -1;
        else return ans;
        
        
    }
};
